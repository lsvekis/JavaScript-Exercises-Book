<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Pagination Example</title>
<script>
// Your JavaScript code goes here
const items = Array.from({ length: 100 }, (_, i) => `Item ${i + 1}`);
let currentPage = 1;
const itemsPerPage = 10;

function displayItems(page) {
  const startIndex = (page - 1) * itemsPerPage;
  const endIndex = startIndex + itemsPerPage;
  const itemsToDisplay = items.slice(startIndex, endIndex);
  document.getElementById('itemsList').innerHTML = itemsToDisplay
    .map(item => `<li>${item}</li>`)
    .join('');
  // Call updatePaginationControls to refresh the state of "Previous" and "Next" buttons
  updatePaginationControls();
}

function changePage(newPage) {
  currentPage = newPage;
  displayItems(currentPage);
}

function updatePaginationControls() {
  document.getElementById('prev').disabled = currentPage === 1;
  document.getElementById('next').disabled = currentPage === Math.ceil(items.length / itemsPerPage);
}

// Event listeners for pagination controls
document.addEventListener('DOMContentLoaded', () => {
  document.getElementById('prev').addEventListener('click', () => {
    if (currentPage > 1) {
      changePage(currentPage - 1);
    }
  });

  document.getElementById('next').addEventListener('click', () => {
    if (currentPage < Math.ceil(items.length / itemsPerPage)) {
      changePage(currentPage + 1);
    }
  });

  // Initial display
  displayItems(currentPage);
});
</script>
</head>
<body>

<div id="itemsContainer">
  <ul id="itemsList"></ul>
</div>

<div id="paginationControls">
  <button id="prev">Previous</button>
  <button id="next">Next</button>
</div>

</body>
</html>
