// Objective: Learn to simplify asynchronous code using async and await.
// 1. Define an asynchronous function that returns a promise after a delay.
async function delayedGreeting(name) {
 return new Promise((resolve, reject) => {
 setTimeout(() => resolve(`Hello, ${name}`), 2000);
 });
}
// 2. Use async/await to call the asynchronous function and log the result.
async function greet() {
 try {
 const greeting = await delayedGreeting("Alex");
 console.log(greeting);
 } catch (error) {
 console.error("An error occurred:", error);
 }
}
greet();
// Exercise: Create more complex asynchronous functions that perform multiple steps in sequence or in parallel using async/await.
